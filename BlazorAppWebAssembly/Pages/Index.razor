@page "/"
@using System.Text.Json
<EditForm Model="person" Context="editContext">

    @*<FluentValidationValidator />*@
    <FluentValidator></FluentValidator>

    @{
        editContext.OnFieldChanged += (sender, eventArgs) =>
        {
            Console.WriteLine("!!!!!OnFieldChanged for FieldName = " + eventArgs.FieldIdentifier.FieldName);
        };
    }

    @*<Field>
            <NumericEdit @bind-Value="person.Age" Min="0" Max="999"></NumericEdit>
            <ValidationMessage For="@(() => person.Age)" />
        </Field>*@
    
    <Validation>
        <Field>
            <FieldLabel><strong>Capacity</strong></FieldLabel>
            <NumericEdit @bind-Value="@person.Age" Min="0" Max="999">
                <Feedback>
                    <ValidationError />
                </Feedback>
            </NumericEdit>
        </Field>
    </Validation>

    <Field>
        @*<NumericEdit2 @bind-Value="person.Age" Min="0" Max="999"></NumericEdit2>*@
        @*<NumericEdit2 class="@editContext.BlazoriseFieldCssClass(() => person.Age)" @bind-Value="person.Age" Min="0" Max="999"></NumericEdit2>*@
        <NumericEdit class="@editContext.BlazoriseFieldCssClass(() => person.Age)" TValue="int" Value="person.Age" ValueChanged="@((v) => ValueChanged(v, editContext))" Min="0" Max="999"></NumericEdit>

        @*<NumericEdit @bind-Value="person.Age" Min="0" Max="999"></NumericEdit>*@
        <ValidationMessage For="() => person.Age" />
    </Field>


    <Column ColumnSize="ColumnSize.Is2">
        <InputNumber @bind-Value="person.Age" />
        <ValidationMessage For="() => person.Age" />
    </Column>


    <DateEdit TValue="DateTime?" @bind-Date="@person.Date" Placeholder="dd-mm-yyyy" />

    <button type="submit">Save</button>

</EditForm>

@code
{
    //EditContext editContext;

    Person person = new Person
    {
        Age = -1,
        //Date = DateTime.Now
    };

    public class Foo
    {
        public string Name { get; set; }
        public string Street { get; set; }
        public JsonElement DynamicInfo { get; set; }
    }

    void ValueChanged(int value, EditContext context)
    {
        Console.WriteLine("OnFieldChanged !! " + value);

        person.Age = value;

        context.NotifyFieldChanged(new FieldIdentifier(person, "Age"));
    }

    void SubmitValidForm()
    {
        DataAnnotationsValidator v;
        ValidationMessage<int> vm;
        InputNumber<int> i;
        NumericEdit<int> ne;
        Validation vv;

        DateEdit<DateTime?> d;
        Console.WriteLine("Form Submitted Successfully!");
    }

}