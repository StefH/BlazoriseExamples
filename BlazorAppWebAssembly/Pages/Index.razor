@page "/"
@using System.Text.Json

<EditForm Model="person" OnValidSubmit="@SubmitValidForm" Context="editContext">
    <FluentValidationValidator />


    @{
        editContext.OnFieldChanged += (sender, eventArgs) =>
        {
            Console.WriteLine("OnFieldChanged for FieldName = " + eventArgs.FieldIdentifier.FieldName);
        };
    }

    @*<Field>
            <NumericEdit @bind-Value="person.Age" Min="0" Max="999"></NumericEdit>
            <ValidationMessage For="@(() => person.Age)" />
        </Field>*@
    <Validations Mode="ValidationMode.Manual" Model="@person">
        <Validation>
            <Field>
                <NumericEdit class="@editContext.BlazoriseFieldCssClass(() => person.Age)" @bind-Value="person.Age" Min="0" Max="999"></NumericEdit>
                @*<NumericEdit @bind-Value="person.Age" Min="0" Max="999"></NumericEdit>*@
                <ValidationMessage For="@(() => person.Age)" />
            </Field>
        </Validation>
    </Validations>

    @*<Column ColumnSize="ColumnSize.Is2">
            <InputNumber @bind-Value="person.Age" />
            <ValidationMessage For="@(() => person.Age)" />
        </Column>*@


    <DateEdit TValue="DateTime?" @bind-Date="@person.Date" Placeholder="dd-mm-yyyy" />

    <button type="submit">Save</button>
</EditForm>

@code
{
    Person person = new Person
    {
        Age = -1,
        //Date = DateTime.Now
    };

    public class Foo
    {
        public string Name { get; set; }
        public string Street { get; set; }
        public JsonElement DynamicInfo { get; set; }
    }

    void ValueChanged(int value)
    {
        Console.WriteLine("OnFieldChanged !! " + value);
    }

    void SubmitValidForm()
    {
        DataAnnotationsValidator v;
        ValidationMessage<int> vm;
        InputNumber<int> i;
        NumericEdit<int> ne;
        Validation vv;

        DateEdit<DateTime?> d;
        Console.WriteLine("Form Submitted Successfully!");
    }

}